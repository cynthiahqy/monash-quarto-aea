{
  "hash": "c202b9a1e14004414165b264219079b3",
  "result": {
    "markdown": "---\ntitle: \"Hello Quarto\"\nauthor: \"Cynthia Huang\"\ndate: 2023-07-19\nfooter: \"[ðŸ”— cynthiahqy.github.io/monash-quarto-aea](https://cynthiahqy.github.io/monash-quarto-aea)\"\nformat:\n  revealjs:\n    theme: default\n    transition: fade\n    slide-number: true\n    chalkboard: true\n---\n\n\n# Pre-workshop instructions\n\n## While you wait for the workshop to begin... {.smaller}\n\n-   Download or update the latest versions of R, RStudio, Quarto and git:\n\n    -   R `4.3` (or 4.2 or above): <https://cran.r-project.org>\n    -   RStudio `2023.06.0+421` or above: <https://posit.co/download/rstudio-desktop>\n    -   Quarto `1.3.433` or above: <https://quarto.org/docs/get-started>\n    -   Git `2.37.1` or above: <https://git-scm.com/book/en/v2/Getting-Started-Installing-Git>\n\n-   Install the following packages:\n\n::: {.cell}\n\n:::\n\n\n-   Download and unzip [`day01-exercises.zip`](https://cynthiahqy.github.io/monash-quarto-aea/day01-exercises.zip)\n\n# Welcome\n\n## About Me\n\n**Cynthia Huang**\n\n![](../images/cynthia-profile.jpg)\n\n- **Currently:** PhD candidate in EBS\n- **Previously:** Economics at Unimelb, SoDa Labs\n- Passionate about research communication and transparency\n\n## Workshop Goals {.smaller}\n\nThis workshop will be a little bit different to your standard Intro to Quarto workshop.\n\nWe will focus on:\n\n- features of Quarto that can help you document research code and data:\n    - incorporate existing text files (scripts, table outputs etc.) <!-- includes -->\n    - reference management -- e.g. in-line citations, cross-references, figure and table numbers <!--- citations -->\n    - generate summary tables and overviews from listing files <!--- listings --->\n- how to publish and share Quarto projects online\n- giving you enough skills in Quarto, git, GitHub and R to incorporate some of these learnings in your existing workflows\n\nI will assume:\n\n- you regularly write scripts in at least one computational language (e.g. STATA, R, python)\n- you know at least basic LaTex\n- you work with small-to-medium sized datasets which can be compressed into reasonable sized downloads.\n\n## Workshop format\n\n- My turn: Lecture segments + live coding\n- Our turn: Live coding + follow along\n- Your turn: Exercises\n\n## Getting Help\n\n- Raise your hand at any time during My Turn and Our Turn segments\n- Use sticky notes during Your turn\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}